<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQWSURBVFhHxVdLbxRHEF4I5Jr8Ch42tgVmZo0dy3hmDYID
        nHwi4sA7CiDCUwQQyiEBDjz+BeIAHBACCYLEQ1ySG1zggrgnRMqMdxfP2kV9NV29vfNYr7ESSipNq7v6
        +6qrq6t7Kr0KVSrLaHr6K5qYWEEXK8tNtxX0yRhs2NZ0L12EGMAZUBoeXvnPxNC3ULRNt0jZnEWLrMqs
        FiRRzQvj0LseB97zKPDf8/dvaNr2X2AMNjTd93V2/qIFoZQvr4RJ9jHBmzj0KQr9eXyL1I4F3lvMwVwX
        q2fRif8Gfh+v7g8F5/ZcFHpJFHittM192o8+GUv70znen9Gk1+9iLihqODNZ3cFgMwJU85OoNjInq+tB
        YQtnpM0YwHKxS0VDNRP6O+3qQr/F4aR4bJDiqZFCwg5lm2h0QNqYqzjAdDlyoskSBdVBTqZIALDqifUU
        bx+n+uE9FI30U7xlU55UFeRjA9Q4fojiWpXiyY3sRNVEzouA7XJZ0eOCAQ7ZS0yQlYN8fIiSZ08I0jh3
        nCJvNcVbR/Pk7Fi0cRU1r/0mtsm9O+xwHzsxnGIBk7GVvOOI2tAH/kEx5D2XsG8bZ/LfBZDm5kQbF07m
        nVDyG5dT21Yin+T+XbttmhMzYfWAy9lePScIG7wWYyTR6DpqnDkqQJQwIByYn887kSU3joq2WlQ/8D3F
        3w2m2wlnA/+VJqNwqye8P1NCzsdIDLGfm/qpefXXTmDXCX+NaI4cNkze+PknxljXjoLBBpc4AG71hj27
        KoMmVNYJZ187CFgRoeaVX/JjINd8cZLWYjOXOABuTQrO0mdixAVFJ4hmkssSQT42iWZn03YReSZZHeyn
        4oCeBqnzofcuNTJb4Kp14lJKBjFRoHlDDOlCDrVbwFwdF9iH2vA3HJa/0sGSWr9lNN3vSxdTMuuAQ37y
        R4qqa4uPKavFZi5wGvpFOqB7XuTA6SOf50DPW6DZTg65uwWcB4V1wmjhFrST0H+aGpUkYfaoQZpIwo9p
        W5OwixOFSdjTMSw657zyxqnD1LxscsIdUyd4bjy10DHsVoi4GhbWAM12LURFNnDi/AnB6F6I3FLMZVIM
        tBTzCkXcUpw9amV1Asrz6vt3cSkeKi/F0jBRyF1GTJA8etAGLjvnWSfYDjJ751Yu/LnLCGKjwEnBYWpf
        x5s38ENkgJLHDwWwcfZYaYZbJ8zdMXv7Znok5U2wwHUM0QE8GjoeJHBi6xjVf9gtlxOIOohdxV6zw/Wj
        +zjUHMGgxweJit2KoicZX6maTF3VOIE25irOgk8yFU2QL/IoVVHDJT/LeS4wXMyeRUOFiXx09rL+fz8m
        KkgWm7X6axZ411j/+18zFRwXrCR7bOAQfkxxq3Xc7Sxlc5YkAsqhFOCCVclqMQabnokrlU8ME3uYBxrs
        dwAAAABJRU5ErkJggg==
</value>
  </data>
</root>